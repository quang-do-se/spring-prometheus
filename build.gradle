import org.springframework.boot.gradle.plugin.SpringBootPlugin
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

plugins {
    id "org.springframework.boot" version "3.2.0"
    id 'java'
    id "com.palantir.docker" version "0.33.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation(platform(SpringBootPlugin.BOM_COORDINATES))
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("io.micrometer:micrometer-registry-prometheus:1.12.1")
}

test {
    useJUnitPlatform()
}

bootJar {
    manifest {
        attributes(
                "Implementation-Version": "1.0.0",
                "Implementation-Build": 'git rev-parse --verify --short HEAD'.execute().text.trim()
        )
    }
}

def dateTimeFormatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME

docker {
    name "quangdo/${project.name}:${project.version}".toLowerCase()
    dockerfile file("Dockerfile")
    files(tasks.bootJar.outputs, file("${project.projectDir}/entrypoint.sh"))
    tag "latestVersion", "software-engineering-docker.artifactory.colorado.edu/${project.name}:${project.version}".toLowerCase()
    labels(["org.opencontainers.image.created": dateTimeFormatter.format(LocalDateTime.now()),
            "org.opencontainers.image.version": "${project.version}",
            "org.opencontainers.image.vendor" : "Quang Do",
            "org.opencontainers.image.title"  : "${project.name}",
            "org.opencontainers.image.source" : ""])
    buildArgs(["JAR_BASE_NAME": "${tasks.bootJar.archiveBaseName.orNull}",
               "JAR_VERSION"  : "${tasks.bootJar.archiveVersion.orNull}"])
}